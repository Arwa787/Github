# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1spDBJLpLdp2bI44r9n0nOchobm5D7RqS
"""

import pandas as pd
import numpy as np
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import LabelEncoder, OneHotEncoder

#function read files (1. Data Reading)

def read_file():
    file_path=input("Please enter your file path:")
    df=file_path
    if file_path.endswith('.csv'):
      df=pd.read_csv(file_path)
    elif file_path.endswith('.json'):
      df = pd.read_json(file_path)
    elif file_path.endswith(('xls', 'xlsx')):
      df = pd.read_excel(file_path)
    else:
      print('Invalid and Unsupported file format. ')
    return

read_file()

def Data_Summary(df,column):
  mean=df[column].mean()
  median=df[column].median()
  most_common = counter.most_common()

  return mean, median,  most_common

def handle_missing_values(file_path):
  # Replace values with NaN
  df = df.replace([np.inf, -np.inf], np.nan)
  # Drop any rows with missing values
  df = df.dropna()

  return df

def Categorical_Data_Encoding(data, columns, method='label'):
      encoded_data = data.copy()
      if method == 'label':
        label_encoder = LabelEncoder()
        for column in columns:
            encoded_data[column] = label_encoder.fit_transform(encoded_data[column])
      elif  method == 'one-hot':
        encoded_data = pd.get_dummies(data, columns=columns)
        for col in columns:
            onehot_encoder = OneHotEncoder(sparse=False)
            encoded_column = onehot_encoder.fit_transform(encoded_data[[col]])
            encoded_column_df = pd.DataFrame(encoded_column, columns=[f"{col}_{int(i)}" for i in range(encoded_column.shape[1])])
            encoded_data = pd.concat([encoded_data, encoded_column_df], axis=1)
            encoded_data.drop(columns=[col], inplace=True)

      return encoded_data



